import engine.Cell;
import engine.GOLList;
import engine.GameofLife;
import org.junit.Before;
import org.junit.Test;

import javax.swing.*;
import java.awt.*;
import java.util.*;
import java.util.List;

/**
 * Created by michael.nyika on 24/08/15.
 */
public class SoundCheckTest {

    private GOLExecutor mainGOExecutor;
    private Grid theGrid;
    private GameofLife game;


    @Before
    public void startTheTest(){
        theGrid = new Grid();
        game = new GameofLife();
        mainGOExecutor = new GOLExecutor();
        mainGOExecutor.setSavedData(new HashMap<String, List<Cell>>());
    }


    @Test
    public void ConwaysGameOfLife() {

        //String input = "0,0;1,1;20,23;20,24;62,63;63,63;61,64;50,50;50,51;50,52;61,62;64,64;64,62;62,64;63,64;65,64;126,127;127,127;126,126"; //eventually will degenerate to blocks and spinning crosses
        String input = "0,0;0,1;1,1;2,2;20,20;21,20;22,22;21,22;22,23;23,24;2,3;3,3;3,4;4,5;7,6;7,7;7,8;8,8;8,9;8,7;10,10;11,11;12,12;13,13;14,13";

        //String input = "2,4;3,2;3,4;4,3;4,4"; //spaceship moving away
       // String input = "15,15;16,16,17,17;18,18;19,19;1,1;1,2;2,2;2,1;3,3;3,1;4,4;4,1;4,2;4,3;4,4;5,5;5,6;5,7;5,1;6,6;6,1;7,7;"; //cool, will eventually evolve into single pattern
       // String input = "7,6;7,7;7,8;8,8;8,9;9,10;8,7;9,9;10,10;11,11;12,12;13,13;14,13";
        //String input = "5,6;5,4;7,3;5,7;3,3;4,5;7,8;8,8;9,8;8,7;"; //COOL
        //String input = "7,6;7,7;7,8;8,8;8,9;9,10;8,7;10,10;11,11;12,12;13,13;14,13"; // also cool, but not so cool
        //String input = "7,6;7,7;7,8;8,8;8,9;8,7;10,10;11,11;12,12;13,13;14,13"; // COOL, 4 CITIES EMERGE
       // String input = "15,15;16,16,17,17;18,18;19,19;0,0;0,1;1,1;2,2;2,4;3,2;3,4;4,3;4,4;7,7;7,8;8,8;8,9;8,7;10,10;10,11;11,11;13,13;14,13;2,1;2,2;2,3;3,3;3,4;3,2;5,5;6,6;7,7;8,8;9,8";
       //String input = "0,0;0,1;1,1;2,2;20,20;21,20;22,22;2,3;3,3;3,4;4,5;7,6;7,7;7,8;8,8;8,9;8,7;10,10;11,11;12,12;13,13;14,13"; //USE THIS FOR 4 MINUTE SEQUENCE


       // String input = "2,2;2,5;3,3;1,7;3,5;2,7;3,7;3,10;0,10;0,11;3,11;3,14;0,13;3,16;0,18;1,18;3,19;3,18;2,20;2,21;0,24;2,24;3,26;3,27;1,26;3,29;1,28;2,29;3,32;0,31;1,32;2,35;0,34;1,36;0,35;1,40;3,41;1,41;1,42;1,43;2,46;0,45;3,47;3,46;2,48;0,49;2,52;1,4;2,4;4,7;1,5;2,8;4,8;2,11;3,12;4,13;2,12;2,14;1,17;2,16;4,18;2,18;4,19;4,22;3,24;1,24;2,26;4,28;1,27;1,29;3,31;4,30;3,33;3,36;1,34;3,38;2,37;4,40;1,38;3,40;2,41;2,44;4,45;1,44;4,47;4,46;3,49;4,52;4,3;4,5;5,5;5,4;5,7;4,10;4,11;4,16;5,14;5,19;5,21;4,21;5,23;2,28;4,27;5,35;5,36;4,36;5,38;3,37;5,40;5,39;4,43;2,42;5,45;3,43;2,47;5,49;4,51;3,50;3,0;3,2;6,5;6,7;5,6;5,8;4,9;3,9;6,12;5,13;5,15;4,15;6,19;3,17;5,22;3,20;4,24;3,23;4,25;6,27;6,30;5,29;5,31;4,35;5,41;6,43;5,43;6,46;5,46;5,48;3,48;3,52;5,1;4,2;7,6;6,6;6,9;6,15;4,14;6,17;5,17;4,20;6,25;5,25;7,26;5,28;6,31;7,32;4,32;7,34;5,34;7,36;6,38;4,38;7,40;5,42;4,42;6,44;7,46;4,44;6,47;4,48;6,51;8,3;6,1;6,4;6,3;7,8;6,8;5,9;6,11;7,12;8,12;7,14;5,16;5,18;6,18;6,21;7,22;6,23;6,22;5,24;5,26;7,27;5,27;8,27;8,30;7,33;6,34;7,35;7,38;7,39;7,41;8,43;8,42;8,46;5,44;8,45;7,48;8,47;8,51;8,50;";

        mainGOExecutor.PLAY_GAME_OF_LIFE(new Grid(), new GameofLife(), input);
    }


    @Test
    public void COMPLETELY_RANDOM_GAME() {
            mainGOExecutor.PLAY_GAME_OF_LIFE(new Grid(), new GameofLife(), null);
    }

}
